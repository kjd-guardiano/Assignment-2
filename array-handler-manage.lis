     1                                  ;Array Handler - Manage
     2                                  ;Katherine Joy Guardiano, 240-3
     3                                  
     4                                  ; ==== Code Area Start ====
     5                                  global manage
     6                                  extern fillarray
     7                                  extern sumarray
     8                                  extern display
     9                                  extern scanf ;for calling the function scanf
    10                                  extern printf ;for calling the function printf
    11                                  
    12                                  segment .data
    13                                  ; ==== Data Declarations ====
    14                                  max_size equ 8 ;8 cells in the array
    15                                  
    16                                  ; ==== Format Declarations ====
    17                                  
    18 00000000 256C6600                floatform db "%lf", 0 ;8-byte float format
    19 00000004 257300                  stringform db "%s", 0 ;string format
    20                                  
    21                                  segment .bss
    22 00000000 <res 40h>               nicearray resq max_size ;max_size acts as a constant
    23                                  
    24                                  align 64
    25 00000040 <res 340h>              backuparea resb 832 
    26                                  
    27                                  segment .text
    28                                  ; ==== Start of Code ====
    29                                  manage:
    30                                  ; ==== Start of Backup ====
    31 00000000 55                      push       rbp                                              ;Save a copy of the stack base pointer
    32 00000001 4889E5                  mov        rbp, rsp                                         ;We do this in order to be 100% compatible with C and C++.
    33 00000004 53                      push       rbx                                              ;Back up rbx
    34 00000005 51                      push       rcx                                              ;Back up rcx
    35 00000006 52                      push       rdx                                              ;Back up rdx
    36 00000007 56                      push       rsi                                              ;Back up rsi
    37 00000008 57                      push       rdi                                              ;Back up rdi
    38 00000009 4150                    push       r8                                               ;Back up r8
    39 0000000B 4151                    push       r9                                               ;Back up r9
    40 0000000D 4152                    push       r10                                              ;Back up r10
    41 0000000F 4153                    push       r11                                              ;Back up r11
    42 00000011 4154                    push       r12                                              ;Back up r12
    43 00000013 4155                    push       r13                                              ;Back up r13
    44 00000015 4156                    push       r14                                              ;Back up r14
    45 00000017 4157                    push       r15                                              ;Back up r15
    46 00000019 9C                      pushf                                                       ;Back up rflags
    47                                  ; ==== End of Backup ====
    48                                  
    49                                  ;block to call fill array
    50 0000001A B800000000              mov rax, 0
    51 0000001F 48BF-                   mov rdi, nicearray ;gives address of array
    51 00000021 [0000000000000000] 
    52 00000029 BE08000000              mov rsi, max_size ;gives maximum size for array
    53 0000002E E8(00000000)            call fillarray
    54 00000033 4889C3                  mov rbx, rax ;store num elements read in rbx
    55                                  
    56 00000036 48BF-                   mov rdi, nicearray
    56 00000038 [0000000000000000] 
    57 00000040 4889DE                  mov rsi, rbx
    58 00000043 E8(00000000)            call display
    59                                  
    60 00000048 48BF-                   mov rdi, nicearray
    60 0000004A [0000000000000000] 
    61 00000052 4889DE                  mov rsi, rbx
    62 00000055 E8(00000000)            call sumarray
    63 0000005A C3                      ret
    64                                  ; ==== End of Code ====
